 /*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

// LAYERS
#define ACC 1
#define SYM 2
#define NUM 3
#define NAV 4
#define APP 5
#define UNKNOWN 6
#define TMX 7
#define SYS 8

&sl {
    release-after-ms = <500>;
};

&sk {
    release-after-ms = <500>;
    quick-release;
};

/ {
    chosen {
        zmk,physical-layout = &default_layout;
    };
};

/ {
    behaviors {
        // the home-row hold-tap to flavor "balanced" (Waits for tapping-term-ms before deciding. Safe, but sometimes feels laggy.)
        hm: home_row_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            require-prior-idle-ms = <140>;
            tapping-term-ms = <200>;
            quick-tap-ms = <160>;
        };

        // the home-row layer-tap to flavor "balanced" (Waits for tapping-term-ms before deciding. Safe, but sometimes feels laggy.)
	// the default &lt could be good as well?
	hl: home_row_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
            require-prior-idle-ms = <140>;
            tapping-term-ms = <200>;
            quick-tap-ms = <160>;
        };

	// hold-tap to fravor "hold-preferred" (If another key is pressed before the timer expires, it chooses hold) useful to type Layer NUM instead of ESC
	lt_hp: lt_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };


        // key = `,`, on shift hold = ?
        mm_cma_qm: mm_comma_to_qestionmark {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            // react when either Shift is held:
            mods = <(MOD_LSFT|MOD_RSFT)>;
            // no shift -> ",", with shift -> "/"
            bindings = <&kp COMMA>, <&kp SLASH>;
            // ensure the Shift you hold stays applied to the "/" press
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
   };
};

/ {
    macros {
        dead: dead {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;

	    // Make the macro complete quickly: (next try would be tap-ms=15, wait-ms=5)
            wait-ms = <0>;   // no delay between bindings
            tap-ms  = <12>;  // very short press duration (tweak 10–20)

            bindings
                = <&macro_param_1to1>
		, <&kp MACRO_PLACEHOLDER> // no delay between bindings
		, <&kp SPACE>
                ;
        };

	accent: dead_accent {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;

	    // Make the macro complete quickly: (next try would be tap-ms=15, wait-ms=5)
            wait-ms = <0>;   // no delay between bindings
            tap-ms  = <12>;  // very short press duration (tweak 10–20)

            bindings
                = <&macro_param_1to1>
		, <&kp MACRO_PLACEHOLDER> // no delay between bindings
		, <&macro_param_2to1>
		, <&kp MACRO_PLACEHOLDER>
                ;
        };

	// TODO: adapt TMX and UNKNOWN as APP then remove
        as: alt_shift {
		compatible = "zmk,behavior-macro-one-param";
		#binding-cells = <1>;
		// Give the OS time to see the modifiers before/after the tap
		wait-ms = <35>;   // delay between each action
		tap-ms  = <50>;   // how long the "tap" is held

		bindings = <&macro_param_1to1>
			, <&macro_press &kp LSHFT &kp LALT>
			, <&macro_tap &kp G> // TEST
			, <&macro_release &kp LSHFT &kp LALT>;
        };
        ca: ctrl_alt {
		compatible = "zmk,behavior-macro-one-param";
		#binding-cells = <1>;
		// Give the OS time to see the modifiers before/after the tap
		wait-ms = <35>;   // delay between each action
		tap-ms  = <50>;   // how long the "tap" is held

		bindings = <&macro_param_1to1>
			, <&macro_press &kp LCTRL &kp LALT>
			, <&macro_tap &kp MACRO_PLACEHOLDER>
			, <&macro_release &kp LCTRL &kp LALT>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "GRAPHITE";
            // |      |     | GUI | ALT | TMX |      |      |     | ALT | GUI |     |     |
            // |      |     | SHT | CTL | NAV |      |      |     | CTL | SHT |     |     |
            // |      |     |     |     |     |      |      |     |     |     |     |     |
            // --------------------------------------------------------------------------------
	// REALITY: ISO/AINSI prevent right/left shift usages..
            // --------------------------------------------------------------------------------
        // | TAB  s-I |  B  |  L   |  D  |  C  |  V   |   '  |  F  |  O  |  U   |  J      | [ACCENT] |
            // | BSPC |  N  |  R   |  T  |  S  |  G   |   Y  |  H  |  A  |  E   |  I      | RET |
            // | [--] |  Q  |  X   |  M  |  W  |  Z   |   K  |  P  |  .  | , ?  | SHIFT | SHIFT |
            //        |         |  APP  | SYMBOL      |     SPACE | Esc/Num | SYSTEM |

           bindings = <
                &kp TAB    &hl WSP B &hm LGUI L  &hm LALT D  &hl TMX C &kp V           &dead SQT &kp F   &hm LALT O  &hm LGUI U  &kp J  &sl ACC
                &kp BSPC   &kp N     &hm LSHFT R &hm LCTRL T &hl NAV S &kp G           &kp Y     &kp H   &hm LCTRL A &hm LSHFT E &kp I      &kp RET
                &trans     &kp Q     &kp X       &kp M       &kp W     &kp Z           &kp K     &kp P   &kp DOT     &mm_cma_qm  &sk LSHFT &sk LSHFT
                                              &trans   &sl APP   &sl SYM                    &kp SPACE  &lt_hp NUM ESC  &mo SYS
            >;
        };

        // #1
        accent_layer {
            display-name = "ACCENT";
 	// suggestion accents layer:
            // |    |     |      |     |  Ç  |      |      |  Ù  |  Ô  |  Î   |     |     |
            // |    |     |      |     |     |      |   Ê  |  À  |  É  |  È   |     | RET |
            // |    |     |      |     |     |      |   Ë  |  Û  |     |      |     |     |
            //                 |     |     |        |        |      |     |
            bindings = <
                &trans   &trans &trans &trans &accent SQT C &trans            &trans          &accent GRAVE U &accent CARET O &accent CARET I &trans   &trans
                &trans   &trans &trans &trans &trans        &trans            &accent CARET E &accent GRAVE A &accent SQT E   &accent GRAVE E &trans   &trans
                &trans   &trans &trans &trans &trans        &trans            &accent TILD E  &accent CARET U &trans          &trans &trans   &trans
                                            &trans &trans &trans                 &trans &trans &trans
            >;
        };

        // #2
        symbol_layer {
            display-name = "SYM";
// improvement still possible. 
// following patterns should be easy to write:
//  <></>
//  /** */
//  ->
//  =>
//  !=
//  ~/
//  +=
//  -=
// So bigrams are: ->, -=,, <>, </,, />, /*,, ><,, =>,, !=,, ~/,, +=
// vim constraints:
// # <-> *  
// ^ <-> $ 
// `/` more accessible 
// ~,*,=,-,/,^,+,% not on the homerow do be at same place on numbers

// current
// |  ~  |  *  |  =  |  -  |  >  |  /   |   @  |  &  |  {  |  }  |  '  |  `  |
// |     |  <  |  #  |  _  |  "  |  !   |   |  |  (  |  )  |  [  |  ]  |     |
// |     |  ^  |  $  |  \  |  +  |  %   |   :  |  ;  |  .  |  ?  |  ,  |     |

            bindings = <
                &dead TILD   &kp STAR     &kp EQL    &kp MINUS  &kp GT    &kp SLASH       &kp AT   &kp AMPS  &kp LBRC  &kp RBRC  &dead SQT   &dead GRAVE
                &trans       &kp LT       &kp HASH   &kp UNDER  &dead DQT &kp EXCL        &kp PIPE &kp LPAR  &kp RPAR  &kp LBKT  &kp RBKT    &trans
                &trans       &dead CARET  &kp DLLR   &kp NUHS   &kp PLUS  &kp PRCNT       &kp COLN &kp SEMI  &kp DOT   &kp QMARK &kp COMMA   &trans
                                                          &trans &trans &trans              &trans &trans &trans
            >;
        };

        // #3
        number_layer {
            display-name = "NUM"; 
            // the . , = - + / * ^ keys are transparent useful
            // |  ~  |  *  |  =  |  -  |  >  |  /  |     |      |     |     |     |     |
            // |     |  1  |  2  |  3  |  4  |  5  |  6  |  7   |  8  |  9  |  0  |     |
            // |  £  |  ^  |  $  |  €  |  +  |  %  |     |      |  .  |  ,  |  ^  |     |
            //                 |     |     |        |        |      |     |
            bindings = <
                &dead TILD &kp STAR    &kp EQL  &kp MINUS      &kp GT     &kp SLASH       &trans &trans &trans &trans &trans &trans
                &trans     &kp N1      &kp N2   &kp N3         &hl NAV N4 &kp N5          &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &trans
                &kp LA(N3) &dead CARET &kp DLLR &kp LA(LS(N2)) &kp PLUS   &kp PRCNT       &trans &trans &trans &trans &trans &trans
                                                      &trans &trans &kp LSHFT               &trans &trans &trans
            >;
        };

        // #4
        nav_layer {
            display-name = "NAV";
            // |      |     |     |     |     |     |      |      |      |       |     |     |
            // |      |     |     |     |     |     | LEFT | DOWN |  UP  | RIGHT |     |     |
            // |      |     |     |     |     |     |      |      |      |       |     |     |
            //                 |     |     |        |        |      |     |
            bindings = <
                &trans &trans &trans &trans &trans &trans  &trans   &trans   &trans &trans    &trans &trans
                &trans &trans &trans &trans &trans &trans  &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
                &trans &trans &trans &trans &trans &trans  &trans   &trans   &trans &trans    &trans &trans
                                     &trans &trans &trans  &trans &trans &trans
            >;
        };

        // #5 C-A-S-<key>
        app_layer {
            display-name = "APP";
            bindings = <
                &kp TAB  &kp LC(LA(LG(B))) &kp LC(LA(LG(L))) &kp LC(LA(LG(D))) &kp LC(LA(LG(C))) &kp LC(LA(LG(V)))           &kp LC(LA(LG(K)))   &kp LC(LA(LG(F)))   &kp LC(LA(LG(O)))   &hm LGUI LC(LA(LG(U)))  &kp LC(LA(LG(SQT))) &trans
                &kp BSPC &kp LC(LA(LG(N))) &kp LC(LA(LG(R))) &kp LC(LA(LG(T))) &kp LC(LA(LG(S))) &kp LC(LA(LG(G)))           &kp LC(LA(LG(Y)))   &kp LC(LA(LG(H)))   &kp LC(LA(LG(A)))   &hm LSHFT LC(LA(LG(E))) &kp LC(LA(LG(I)))   &kp RET
                &trans   &kp LC(LA(LG(Q))) &kp LC(LA(LG(X))) &kp LC(LA(LG(M))) &kp LC(LA(LG(W))) &kp LC(LA(LG(Z)))           &kp LC(LA(LG(J)))   &kp LC(LA(LG(P)))   &kp LC(LA(LG(DOT))) &kp LC(LA(LG(COMMA)))   &trans              &trans
                       							         &trans     &trans     &sl SYM                   &kp SPACE     &lt_hp NUM ESC     &mo SYS
            >;
        };

        // #6 A-S-<key>
        workspace_layer { // do be renamed (available for something else)
            display-name = "UNKNOWN";
            bindings = <
                &as TAB    &as B &as L &as D &as C &as V           &as K   &as F   &as O   &as U     &as SQT &trans
                &as BSPC   &as N &as R &as T &as S &as G           &as Y   &as H   &as A   &as E     &as I   &kp RET
                &trans     &as Q &as X &as M &as W &as Z           &as J   &as P   &as DOT &as COMMA &trans  &trans
                       &trans     &trans     &sl SYM                   &kp SPACE     &lt_hp NUM ESC     &mo SYS
            >;
        };

        // #7 C-A-<key>
        tmux_layer {
            display-name = "TMX";
            bindings = <
                &ca TAB    &ca B &ca L &ca D &ca C &ca V           &ca K   &ca F   &ca O   &ca U     &ca SQT &trans
                &ca BSPC   &ca N &ca R &ca T &ca S &ca G           &ca Y   &ca H   &ca A   &ca E     &ca I   &kp RET
                &trans     &ca Q &ca X &ca M &ca W &ca Z           &ca J   &ca P   &ca DOT &ca COMMA &trans  &trans
                       &trans     &trans     &sl SYM                   &kp SPACE     &lt_hp NUM ESC     &mo SYS
            >;
        };

        // #8
        system_layer {
            display-name = "SYS";
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5            |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | CTRL | BT1 | BT2 | BT3 | BT4 | BT5           | LFT | DWN |  UP | RGT |     |      |
            // | SHFT | BTCR| RGB | RST | BOOT| Studio Unlock |     |     |     |     |     |      |
            //                          | GUI |     | SPC     |    ENT |     | ALT |
            bindings = <
                &kp TAB   &kp N1       &kp N2          &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
                &kp LCTRL &bt BT_SEL 0 &bt BT_SEL 1    &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
                &kp LSHFT &bt BT_CLR   &rgb_ug RGB_TOG &sys_reset   &bootloader  &studio_unlock &trans   &trans   &trans &trans    &trans &trans
                                                       &kp LGUI     &trans       &kp SPACE      &kp LGUI &trans   &kp SPACE
            >;
        };

        // #9
        extra_layer {
            display-name = "EXTRA";
            bindings = <
                &trans &trans &trans &trans &trans &trans  &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans  &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans  &trans &trans &trans &trans &trans &trans
                                     &trans &trans &trans  &trans &trans &trans
            >;
        };
    };
};
